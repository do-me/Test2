{"openapi":"3.0.2","info":{"title":"Filialstandorte API","description":"Filialstandorte API","termsOfService":"http://filialstandorte.de","contact":{"name":"gb consite","url":"https://gbconsite.de","email":"info@gbconsite.de"},"version":"0.0.1"},"paths":{"/keys/":{"get":{"tags":["keys"],"summary":"Where Keys","operationId":"where_keys_keys__get","parameters":[{"description":"Benötigt einen gültigen API-Key","required":true,"schema":{"title":"Api Key","maxLength":100,"minLength":8,"type":"string","description":"Benötigt einen gültigen API-Key"},"name":"api_key","in":"query"},{"description":"Tabellenname","required":true,"schema":{"title":"Table Name","maxLength":100,"minLength":1,"type":"string","description":"Tabellenname"},"name":"table_name","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/":{"get":{"tags":["api"],"summary":"Api Request","operationId":"api_request_api__get","parameters":[{"description":"Benötigt einen gültigen API-Key","required":true,"schema":{"title":"Api Key","maxLength":100,"minLength":8,"type":"string","description":"Benötigt einen gültigen API-Key"},"name":"api_key","in":"query"},{"description":"Tabellenname","required":true,"schema":{"title":"Table Name","maxLength":100,"minLength":1,"type":"string","description":"Tabellenname"},"name":"table_name","in":"query"},{"description":"Als JSON formatiertes Array von Bedingungen, Format <pre>[{\"key\":str,\"op\":str,\"val\":str/float},{...},{...}]</pre><br>Erlaubte Operatoren:<br> <pre>['==', '<', '>', '<=', '>=', 'in', 'not in', '!=', 'regex']</pre> Bsp.: <pre>[{\"key\":\"bundesland\",\"op\":\"==\",\"val\":\"Berlin\"},<br>{\"key\":\"markttyp\",\"op\":\"regex\", \"val\":\"^((?!Center).)*$\"},<br>{\"key\":\"markttyp\",\"op\":\"in\",\"val\":[\"Sonstige\",\"Alnatura\"]] </pre>","required":false,"schema":{"title":"Where","type":"string","description":"Als JSON formatiertes Array von Bedingungen, Format <pre>[{\"key\":str,\"op\":str,\"val\":str/float},{...},{...}]</pre><br>Erlaubte Operatoren:<br> <pre>['==', '<', '>', '<=', '>=', 'in', 'not in', '!=', 'regex']</pre> Bsp.: <pre>[{\"key\":\"bundesland\",\"op\":\"==\",\"val\":\"Berlin\"},<br>{\"key\":\"markttyp\",\"op\":\"regex\", \"val\":\"^((?!Center).)*$\"},<br>{\"key\":\"markttyp\",\"op\":\"in\",\"val\":[\"Sonstige\",\"Alnatura\"]] </pre>","default":[]},"name":"where","in":"query"},{"description":"Eingabeformat: Liste von Stützpunktlisten nach GeoJSON-Spezifikation. Unterstützt MultiPolygone; lon,lat (Achtung dreifach verschachtelt [ ]). Bsp: <br><pre> [<br>[[6.639248,53.041213],[15.341267,53.041213],[15.341267,54.686534],[6.639248,54.686534],[6.639248,53.041213]],<br>[[5.276811,51.096623],[16.374083,51.096623],[16.374083,52.119999],[5.276811,52.119999],[5.276811,51.096623]]<br>] </pre> <br> Tipp: Polygon mit <a href=https://geoman.io/geojson-editor>geoman.io/editor</a> zeichnen, anschließend copy & paste.","required":false,"schema":{"title":"Polygon Filter Coordinates","type":"string","description":"Eingabeformat: Liste von Stützpunktlisten nach GeoJSON-Spezifikation. Unterstützt MultiPolygone; lon,lat (Achtung dreifach verschachtelt [ ]). Bsp: <br><pre> [<br>[[6.639248,53.041213],[15.341267,53.041213],[15.341267,54.686534],[6.639248,54.686534],[6.639248,53.041213]],<br>[[5.276811,51.096623],[16.374083,51.096623],[16.374083,52.119999],[5.276811,52.119999],[5.276811,51.096623]]<br>] </pre> <br> Tipp: Polygon mit <a href=https://geoman.io/geojson-editor>geoman.io/editor</a> zeichnen, anschließend copy & paste.","default":[]},"name":"polygon_filter_coordinates","in":"query"},{"description":"Punkt (lon,lat), bspw. <pre>[8.2356,50.23521]</pre>","required":false,"schema":{"title":"Point Buffer Coordinates","type":"string","description":"Punkt (lon,lat), bspw. <pre>[8.2356,50.23521]</pre>","default":[]},"name":"point_buffer_coordinates","in":"query"},{"description":"Radius in Metern um den angegebenen Punkt (nur relevant wenn Punkt angegeben","required":false,"schema":{"title":"Point Buffer Distance","maximum":5000000.0,"minimum":0.0,"type":"integer","description":"Radius in Metern um den angegebenen Punkt (nur relevant wenn Punkt angegeben","default":1000},"name":"point_buffer_distance","in":"query"},{"description":"Exportformat: <pre>json,csv,text,html,map</pre>","required":false,"schema":{"title":"Export Format","maxLength":4,"minLength":3,"type":"string","description":"Exportformat: <pre>json,csv,text,html,map</pre>","default":"json"},"name":"export_format","in":"query"},{"description":"Koordinatensystem als EPSG-Code für den Output","required":false,"schema":{"title":"Crs","type":"integer","description":"Koordinatensystem als EPSG-Code für den Output","default":4326},"name":"CRS","in":"query"},{"description":"Limitierung der Ergebnisse auf x Einträge","required":false,"schema":{"title":"Limit","type":"integer","description":"Limitierung der Ergebnisse auf x Einträge","default":10},"name":"limit","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/stats/usage_stats_between/":{"get":{"tags":["stats"],"summary":"Statistik Daten","operationId":"Statistik_Daten_stats_usage_stats_between__get","parameters":[{"description":"Benötigt einen gültigen API-Key","required":true,"schema":{"title":"Api Key","maxLength":100,"minLength":8,"type":"string","description":"Benötigt einen gültigen API-Key"},"name":"api_key","in":"query"},{"description":"Tabellenname (wenn keiner angegeben, Statistiken für alle Tabellen)","required":false,"schema":{"title":"Table Name","maxLength":100,"minLength":1,"type":"string","description":"Tabellenname (wenn keiner angegeben, Statistiken für alle Tabellen)"},"name":"table_name","in":"query"},{"description":"Exportformat: <pre>csv,html</pre>","required":false,"schema":{"title":"Export Format","maxLength":4,"minLength":3,"type":"string","description":"Exportformat: <pre>csv,html</pre>","default":"csv"},"name":"export_format","in":"query"},{"description":"Startdatum <pre>2010-09-15</pre>","required":false,"schema":{"title":"Date Start","maxLength":10,"minLength":10,"type":"string","description":"Startdatum <pre>2010-09-15</pre>"},"name":"date_start","in":"query"},{"description":"Enddatum <pre>2021-09-15</pre>","required":false,"schema":{"title":"Date End","maxLength":10,"minLength":10,"type":"string","description":"Enddatum <pre>2021-09-15</pre>"},"name":"date_end","in":"query"},{"description":"Tägliche zu berücksichtigende Tageszeit Start. Filtert jeden Tag mit dieser Uhrzeit, bspw. täglich ab<br><pre>09:00</pre>","required":false,"schema":{"title":"Time Start","maxLength":14,"minLength":5,"type":"string","description":"Tägliche zu berücksichtigende Tageszeit Start. Filtert jeden Tag mit dieser Uhrzeit, bspw. täglich ab<br><pre>09:00</pre>"},"name":"time_start","in":"query"},{"description":"Tägliche zu berücksichtigende Tageszeit Ende. Filtert jeden Tag mit dieser Uhrzeit, bspw. täglich bis <br><pre>12:00</pre>","required":false,"schema":{"title":"Time End","maxLength":14,"minLength":5,"type":"string","description":"Tägliche zu berücksichtigende Tageszeit Ende. Filtert jeden Tag mit dieser Uhrzeit, bspw. täglich bis <br><pre>12:00</pre>"},"name":"time_end","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/stats/usage_stats_last/":{"get":{"tags":["stats"],"summary":"Statistik Intervall","operationId":"Statistik_Intervall_stats_usage_stats_last__get","parameters":[{"description":"Benötigt einen gültigen API-Key","required":true,"schema":{"title":"Api Key","maxLength":100,"minLength":8,"type":"string","description":"Benötigt einen gültigen API-Key"},"name":"api_key","in":"query"},{"description":"Tabellenname (wenn keiner angegeben, Statistiken für alle Tabellen)","required":false,"schema":{"title":"Table Name","maxLength":100,"minLength":1,"type":"string","description":"Tabellenname (wenn keiner angegeben, Statistiken für alle Tabellen)"},"name":"table_name","in":"query"},{"description":"Exportformat: <pre>csv,html</pre>","required":false,"schema":{"title":"Export Format","maxLength":4,"minLength":3,"type":"string","description":"Exportformat: <pre>csv,html</pre>","default":"csv"},"name":"export_format","in":"query"},{"description":"Filtert für einen zurückliegenden Intervall (s, min, h, d, w, m, y) bspw. <pre>1d, 2d1h, 3m, 1y </pre>","required":false,"schema":{"title":"Indexer","maxLength":10,"minLength":2,"type":"string","description":"Filtert für einen zurückliegenden Intervall (s, min, h, d, w, m, y) bspw. <pre>1d, 2d1h, 3m, 1y </pre>","default":"1M"},"name":"indexer","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"type":"string"}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}}},"tags":[{"name":"api","description":"GET-Requests Definitionen für Abfragen."},{"name":"keys","description":"Gibt Spaltennamen für Filter aus."},{"name":"stats","description":"Statistiken"}]}
